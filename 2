def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var11 = func3(var7, arg2)
    var14 = class5()
    for var15 in xrange(46):
        var16 = var14.func6
        var16(var7, var7)
    var22 = var19(var11, var7)
    def func10(arg23, arg24):
        var25 = (56 | (arg23 - arg1 ^ var11)) ^ (arg24 | var7)
        var26 = arg2 + -180829041
        var27 = var22 ^ var11 | arg2
        var28 = (var26 ^ -572) ^ var27
        result = var11 | (-658760560 ^ var22 & arg2 | (var26 & (542 | arg2) & var28 - (((arg23 & var26) ^ var25) | -1703774755)))
        return result
    var29 = func10(arg1, var11)
    var30 = -954 + var7
    var31 = arg2 & var22
    var32 = var31 ^ 481
    var33 = 1771881177 | var31 ^ 464 - var11
    var34 = var31 + var22
    var35 = (var32 ^ var7 & var30) & var11
    var36 = ((var30 - var30) + -399128325) + var22
    var37 = var36 ^ var22
    var38 = var37 - var31
    var39 = 1120476980 & (var30 + var33)
    var40 = var34 | var36
    var41 = var40 + ((var38 ^ var40) + var40)
    var42 = var39 | var11
    var43 = var31 ^ 844 + var35 + var29
    var44 = var22 ^ ((var29 & -66) - var34)
    var45 = var44 + var30
    var46 = var38 | ((var41 & var33) & var30)
    if arg2 < var30:
        var47 = var39 & arg2 | (var45 ^ var36)
    else:
        var47 = (var34 + (var34 ^ var43)) ^ var41
    var48 = var46 ^ (var31 + var41) | var40
    var49 = var39 + var43
    var50 = (var22 | arg1 + var33) & -524
    var51 = var48 - var36
    if var37 < arg1:
        var52 = var36 + var44
    else:
        var52 = var44 & -618 ^ var35 ^ var48
    result = (var11 - var48 - (var39 - ((var42 + var22) + ((var7 + var36) - (var45 - -396)))) - var38 + var46) - var11
    return result
def func9(arg20, arg21):
    result = 972 | -1477001118
    return result
def func8():
    closure = [-8]
    def func7(arg17, arg18):
        closure[0] += func9(arg17, arg18)
        return closure[0]
    func = func7
    return func
var19 = func8()
class class5(object):
    def func6(self, arg12, arg13):
        return 0
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(12):
        if var6 < arg3:
            var5 += (arg4 + var5) | arg4
        else:
            var5 += var6 | arg3
    return var5
def func3(arg8, arg9):
    def func4(acc, rest):
        var10 = rest - -7
        if acc == 0:
            return var10
        else:
            result = func4(acc - 1, var10)
            return result
    result = func4(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 53'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
